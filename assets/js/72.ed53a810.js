(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{481:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("在很久很久以前，就 push 自己学过 go 语言，但是之前只是看了一下基础语法就放弃了，实在是工作当中没有应用场景。最近发现基于 go 写的 esbuild 异军突起，想要深入研究下它的奥秘，发现看不懂。于是，打算先从 go 开始学一遍，等我把 go 学好了，再去研究 esbuild。所以，最近的几篇文章都会写 go 的一些学习心得，今天的文章就从 go 语言的模块化开始。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210405193808.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[t._v("#")]),t._v(" 环境变量")]),t._v(" "),s("p",[t._v("学习 go 语言的第一步，当然是安装以及环境变量。由于我是 macos，直接运行 "),s("code",[t._v("brew install go")]),t._v(" 就能安装成功，也可以在"),s("a",{attrs:{href:"https://golang.google.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网（https://golang.google.cn/）"),s("OutboundLink")],1),t._v("下载对应的二进制包。")]),t._v(" "),s("p",[t._v("安装成功后，需要配置下面几个环境变量：")]),t._v(" "),s("ul",[s("li",[t._v("GOROOT：go 语言的安装路径；")]),t._v(" "),s("li",[t._v("GOBIN：go 语言的可执行文件路径，一般为 "),s("code",[t._v('"$GOROOT/bin"')]),t._v("；")]),t._v(" "),s("li",[t._v("GOPATH：工作目录，可设置多个，每个项目都可以设置一个单独的GOPATH；")])]),t._v(" "),s("h2",{attrs:{id:"gopath"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gopath"}},[t._v("#")]),t._v(" GOPATH")]),t._v(" "),s("p",[t._v("在 GoLand（go 语言最强IDE） 中，我们可以在 "),s("code",[t._v("Preferences")]),t._v(" 中设置多个 GOPATH，而且将 GOPATH 分为全局和局部的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210402194612.png",alt:""}})]),t._v(" "),s("p",[t._v("GOPATH 最早出现的意义是用来进行模块管理，每个 GOPATH 中会有三个目录：")]),t._v(" "),s("ul",[s("li",[t._v("src：用来存放源代码；")]),t._v(" "),s("li",[t._v("pkg：用来存放编译后的 "),s("code",[t._v(".a(archive)")]),t._v(" 静态库文件；")]),t._v(" "),s("li",[t._v("bin：用来存放编译后可直接运行的二进制文件；")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210402194916.png",alt:""}})]),t._v(" "),s("p",[t._v("一般设置为工作目录的 src 文件夹需要手动创建，其他两个目录都是编译后自动生成的。")]),t._v(" "),s("p",[t._v("接下来，我们新建了一个目录 "),s("code",[t._v("~/Code/goland/go-story")]),t._v("，并将该目录设置为工作目录。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOPATH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~/Code/goland/go-story"')]),t._v("\n")])])]),s("p",[t._v("然后在当前目录新建一个 "),s("code",[t._v("src")]),t._v(" 文件夹，并新建一个 "),s("code",[t._v("hello")]),t._v(" 目录，在 "),s("code",[t._v("hello")]),t._v(" 目录新建 "),s("code",[t._v("main.go")]),t._v(" 文件。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210405141212.png",alt:""}})]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("hello/main.go")]),t._v(" 文件中，写入如下代码：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"flag"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tflag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StringVar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"everyone"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The greeting object."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tflag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解析命令行参数")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\nHello %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("flag 库是 go 内置的模块，类似于 node 的 "),s("a",{attrs:{href:"https://www.npmjs.com/package/commander",target:"_blank",rel:"noopener noreferrer"}},[t._v("commander"),s("OutboundLink")],1),t._v(" 库，运行后结果如下所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210405143954.png",alt:""}})]),t._v(" "),s("p",[t._v("下面我们引入一个能够让命令行输出色彩更加丰富的库："),s("a",{attrs:{href:"https://github.com/TreyBastian/colourize",target:"_blank",rel:"noopener noreferrer"}},[t._v("colourize"),s("OutboundLink")],1),t._v("，类似于 node 中的 "),s("a",{attrs:{href:"https://www.npmjs.com/package/chalk",target:"_blank",rel:"noopener noreferrer"}},[t._v("chalk"),s("OutboundLink")],1),t._v("。通过下面这个命令来安装依赖：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("go get github.com/TreyBastian/colourize \n")])])]),s("p",[t._v("运行之后，我们可以看到在工作区自动创建了一个 "),s("code",[t._v("pkg")]),t._v(" 目录，目录下新生成的是 "),s("code",[t._v("colourize")]),t._v(" 库文件，同时 src 目录也新建了一个 "),s("code",[t._v("github.com")]),t._v(" 目录，用来放 "),s("code",[t._v("colourize")]),t._v(" 的源码。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210405141929.png",alt:""}})]),t._v(" "),s("p",[s("code",[t._v("go get")]),t._v(" 命令可以简单理解为 "),s("code",[t._v("npm install")]),t._v("。接下来就能在 "),s("code",[t._v("hello/main.go")]),t._v(" 中引入依赖。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"flag"')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/TreyBastian/colourize"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tflag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("StringVar")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"everyone"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The greeting object."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("colourize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Colourize")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\nHello %s\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" colourize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Blue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tflag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("运行 "),s("code",[t._v("hello/main.go")]),t._v(" 可以看到命令行输出了蓝色的文字。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210405142320.png",alt:""}})]),t._v(" "),s("p",[t._v("默认情况下，go 依赖的加载机制为：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("$GOROOT")]),t._v(" 下的 "),s("code",[t._v("src")]),t._v(" 目录")]),t._v(" "),s("li",[s("code",[t._v("$GOPATH")]),t._v(" 下的 "),s("code",[t._v("src")]),t._v(" 目录")])]),t._v(" "),s("h2",{attrs:{id:"go-vendor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#go-vendor"}},[t._v("#")]),t._v(" Go Vendor")]),t._v(" "),s("p",[t._v("前面这种方式，有个很麻烦的问题，就是没有办法进行很好的版本管理，而且多个依赖分散在 "),s("code",[t._v("$GOPATH/src")]),t._v(" 目录下，可能会出现很多很麻烦的问题。")]),t._v(" "),s("p",[t._v("例如，我现在在 "),s("code",[t._v("GOPATH")]),t._v(" 下有两个项目："),s("code",[t._v("go-blog")]),t._v("、"),s("code",[t._v("go-stroy")]),t._v("，这两个项目分别有不同的依赖，分散在 "),s("code",[t._v("github.com")]),t._v(" 目录，这个时候到底要不要将整个 "),s("code",[t._v("github.com")]),t._v(" 目录添加到版本库呢？")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210405150429.png",alt:""}})]),t._v(" "),s("p",[t._v("go 在 1.5 版本的时候，引入了 vendor 机制，在每个项目目录下可以通过 "),s("code",[t._v("vendor")]),t._v(" 目录存放依赖，这类似于 node 中的 "),s("code",[t._v("node_modules")]),t._v(" 目录。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210405150802.png",alt:""}})]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("go vendor")]),t._v(" 需要先安装 "),s("code",[t._v("govendor")]),t._v(" 模块。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("go get govendor\n")])])]),s("p",[t._v("然后在项目目录运行如下命令。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/Code/gland/go-story/src/hello\ngovendor init\ngovendor "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" github.com/TreyBastian/colourize\n")])])]),s("p",[t._v("可以看到，"),s("code",[t._v("hello")]),t._v(" 项目下新生成了一个 "),s("code",[t._v("vendor")]),t._v(" 目录，而且 "),s("code",[t._v("colourize")]),t._v(" 也被拷贝到了该目录下。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210405150717.png",alt:""}})]),t._v(" "),s("p",[t._v("而且 "),s("code",[t._v("govendor")]),t._v(" 会新建一个 "),s("code",[t._v("vendor.json")]),t._v(" 文件，用来进行依赖项的管理。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210405151449.png",alt:""}})]),t._v(" "),s("p",[t._v("有了 "),s("code",[t._v("go vendor")]),t._v(" 之后，依赖项的加载顺序如下：")]),t._v(" "),s("ul",[s("li",[t._v("项目目录下的 "),s("code",[t._v("vendor")]),t._v(" 目录")]),t._v(" "),s("li",[t._v("项目目录上一级的 "),s("code",[t._v("vendor")]),t._v(" 目录")]),t._v(" "),s("li",[t._v("不断向上冒泡 ……（PS. 类似于 "),s("code",[t._v("node_modules")]),t._v("）")]),t._v(" "),s("li",[s("code",[t._v("$GOPATH")]),t._v(" 下的 "),s("code",[t._v("vendor")]),t._v(" 目录")]),t._v(" "),s("li",[s("code",[t._v("$GOROOT")]),t._v(" 下的 "),s("code",[t._v("src")]),t._v(" 目录")]),t._v(" "),s("li",[s("code",[t._v("$GOPATH")]),t._v(" 下的 "),s("code",[t._v("src")]),t._v(" 目录")])]),t._v(" "),s("h3",{attrs:{id:"配置开关"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置开关"}},[t._v("#")]),t._v(" 配置开关")]),t._v(" "),s("p",[t._v("有一点需要注意，在 go 1.5 版本下，"),s("code",[t._v("go vendor")]),t._v(" 并不是默认开启的，需要手动配置环境变量：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GO15VENDOREXPERIMENT")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),s("p",[t._v("在 go 1.6 版本中，"),s("code",[t._v("go vendor")]),t._v(" 已经改为默认开启。")]),t._v(" "),s("h2",{attrs:{id:"go-modules"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#go-modules"}},[t._v("#")]),t._v(" Go Modules")]),t._v(" "),s("p",[t._v("虽然 1.5 版本推出了 "),s("code",[t._v("go vendor")]),t._v("，但是没有解决根本问题，只是依赖的查找上支持到了 "),s("code",[t._v("vendor")]),t._v(" 目录，"),s("code",[t._v("vendor")]),t._v(" 目录还是需要一些第三方的库（"),s("code",[t._v("govendor")]),t._v("、"),s("code",[t._v("godep")]),t._v("、"),s("code",[t._v("glide")]),t._v("）进行管理，而且对于 "),s("code",[t._v("GOPATH")]),t._v(" 环境变量依然有所依赖。")]),t._v(" "),s("p",[t._v("官方为了解决这些问题，终于在 1.11 版本中，实验性的内置了其模块管理的能力（1.12 版本正式开启）："),s("code",[t._v("go mod")]),t._v("。")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("go mod")]),t._v(" 的时候，我们无需 "),s("code",[t._v("GOPATH")]),t._v("，所以我们需要把之前配置的 "),s("code",[t._v("GOPATH")]),t._v(" 清理掉，调整下目录结构，将 "),s("code",[t._v("go-story/hello/main.go")]),t._v(" 直接移动到 "),s("code",[t._v("go-story/main.go")]),t._v("，然后将 "),s("code",[t._v("src")]),t._v("、"),s("code",[t._v("pkg")]),t._v(" 目录删除。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化 go modules")]),t._v("\ngo mod init "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pkg-name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210405172840.png",alt:""}})]),t._v(" "),s("p",[t._v("此时，会在目录下生成一个 "),s("code",[t._v("go.mod")]),t._v(" 文件。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210405172955.png",alt:""}})]),t._v(" "),s("p",[t._v("查看其内容，发现里面会声明 go 的版本号，以及当前模块的名称。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210405173448.png",alt:""}})]),t._v(" "),s("p",[t._v("然后我们安装依赖（"),s("strong",[t._v("不管是何种依赖管理的方式，安装方法依旧不变")]),t._v("）：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("go get github.com/TreyBastian/colourize\n")])])]),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210405173658.png",alt:""}})]),t._v(" "),s("p",[s("code",[t._v("go.mod")]),t._v(" 中，会写入添加的依赖，以及版本号，同时，该模块会被安装到 GOPATH 中。由于我们之前将 GOPATH 移除，这里会安装到 GOPATH 的默认值中（"),s("code",[t._v("~/go/")]),t._v("）。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210405173923.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"导入与导入本地模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#导入与导入本地模块"}},[t._v("#")]),t._v(" 导入与导入本地模块")]),t._v(" "),s("p",[t._v("前面介绍导入模块的方式，通过 "),s("code",[t._v("go get")]),t._v(" 下载第三方模块，然后导入的方式。如果我们当前的项目中，需要进行模块的拆分，应该怎么做呢？")]),t._v(" "),s("p",[t._v("我们可以创建一个新的 "),s("code",[t._v("utils")]),t._v(" 模块，在 "),s("code",[t._v("go-story")]),t._v(" 目录下新建一个 "),s("code",[t._v("utils")]),t._v(" 文件夹，然后新建 "),s("code",[t._v("utils.go")]),t._v(" 文件。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210409162345.png",alt:""}})]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" utils "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 声明包名为 utils")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("然后，我们去到 "),s("code",[t._v("main.go")]),t._v(" 引入该模块：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go-story/utils"')]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tutils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"测试第三方模块"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("我们引入模块的方式为，之前调用 "),s("code",[t._v("go mod init")]),t._v(" 的时候声明的 "),s("code",[t._v("module-name")]),t._v("（"),s("code",[t._v("go-stroy")]),t._v("），然后加上模块内部声明的 "),s("code",[t._v("package-name")]),t._v("（"),s("code",[t._v("utils")]),t._v("）。")]),t._v(" "),s("p",[t._v("这里的 "),s("code",[t._v("package-name")]),t._v(" 指的是代码内的 "),s("code",[t._v("package utils")]),t._v("，不是指文件名，我们可以将 "),s("code",[t._v("utils.go")]),t._v(" 重命名为 "),s("code",[t._v("index.go")]),t._v("，代码也是能正常运行的。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210409163034.png",alt:""}})]),t._v(" "),s("p",[t._v("可以看到 "),s("code",[t._v("utils/index.go")]),t._v(" 中，没有显示的 "),s("code",[t._v("export")]),t._v(" 之类的语法来进行方法的暴露。实际上，go 中只要是大写开头的方法就可以被外部调用。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// utils/index.go")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" utils\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fmt"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tfmt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.go")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" main\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go-story/utils"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tutils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"测试第三方模块"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("如果将方法改为小写，会调用失败。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://file.shenfq.com/pic/20210409163419.png",alt:""}})]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("之前开发 node 的过程中，也踩过很多 npm 的坑，而且社区对 npm 也有很多怨言，也出现了很多第三方的模块："),s("code",[t._v("yarn")]),t._v("、"),s("code",[t._v("pnpm")]),t._v(" 等等。")]),t._v(" "),s("p",[t._v("想不到 go 的模块管理，也是一部血泪史，现在下载一些 go 的老项目还会发现一些 "),s("code",[t._v("go vendor")]),t._v(" 管理方式的项目。另外，"),s("code",[t._v("go mod")]),t._v(" 出现后，go 官方也在计划移除 "),s("code",[t._v("GOPATH")]),t._v("。")])])}),[],!1,null,null,null);s.default=e.exports}}]);