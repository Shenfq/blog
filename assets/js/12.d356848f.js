(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{421:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("回想2007年，那时候我刚加入Mozilla's JavaScript团队，那时候的一个典型的JavaScript程序只需要一行代码，听起来像个笑话。")]),t._v(" "),a("p",[t._v("两年后，Google Maps发布。在这之前，JavaScript主要用来做表单的验证，你用来处理"),a("code",[t._v("<input onchange=>")]),t._v("这个程序当然只需要一行。")]),t._v(" "),a("p",[t._v("时过境迁，JavaScript项目已经发展到让人叹为观止，社区涌现了许多帮助开发的工具。但是最迫切需要的是一个模块系统，它能将你的工作分散到不同的文件与目录中，在需要的时候他们能彼此之间相互访问，并且可以有效的加载所有代码。所以JavaScript有模块系统这很正常，而且还有多个模块系统（CommonJS、AMD、CMD、UMD）。不仅如此，它还有几个包管理器（npm、bower），用来安装软件还能拷贝一些深度依赖。你可能认为ES6和它的新模块系统出现得有点晚。")]),t._v(" "),a("p",[t._v("那我们来看看ES6为现存的模块系统添加了什么，以及未来的标准和工具能否建立在这个系统上。首先，让我们看看ES6的模块是什么样子的。")]),t._v(" "),a("h2",{attrs:{id:"模块的基础知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块的基础知识"}},[t._v("#")]),t._v(" 模块的基础知识")]),t._v(" "),a("p",[t._v("ES6模块是一个包含了JS代码的文件。没有所谓的"),a("code",[t._v("module")]),t._v("关键词，一个模块看起来和一个脚本文件没什么不一样，除了一下两个区别：")]),t._v(" "),a("ul",[a("li",[t._v("ES6的模块自动开启严格模式，即使你没有写"),a("code",[t._v('"use strict";')]),t._v("；")]),t._v(" "),a("li",[t._v("在模块中，你可以使用"),a("code",[t._v("import")]),t._v("和"),a("code",[t._v("exprot")]),t._v("。")])]),t._v(" "),a("p",[t._v("先来谈谈export。在默认情况下，模块中所有的声明都是私有的，如果你希望模块中的某些声明是公开的，并在其他模块中使用它们，你就必须"),a("em",[t._v("导出")]),t._v("它们。这里有一些实现方法，最简单的是添加"),a("code",[t._v("export")]),t._v("关键字。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// kittydar.js - Find the locations of all the cats in an image.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (Heather Arthur wrote this library for real)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (but she didn't use modules, because it was 2013)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("detectCats")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("canvas"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" kittydar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Kittydar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" kittydar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("detectCats")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("canvas"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Kittydar")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" several methods doing image processing "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This helper function isn't exported.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resizeCanvas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),a("p",[t._v("你可以"),a("code",[t._v("export")]),t._v("任何的顶级变量："),a("code",[t._v("function")]),t._v("、"),a("code",[t._v("class")]),t._v("、"),a("code",[t._v("var")]),t._v("、"),a("code",[t._v("let")]),t._v("、"),a("code",[t._v("const")]),t._v("。")]),t._v(" "),a("p",[t._v("你如果要写一个模块知道这么多就够了！你不必再把所有的东西放到一个立即执行函数或者回调函数里面，只需要在你需要的地方进行声明。由于这个代码是一个模块，而不是一个脚本，所有的声明的作用域都只属于这个模块，而不是所有脚本和模块都能全局访问的。你只要把模块中的声明导出成一组公共模块的API就足够了。")]),t._v(" "),a("p",[t._v("除了导出，模块里的代码和其他普通代码没有什么区别。它可以访问全局变量，像"),a("code",[t._v("Object")]),t._v("和"),a("code",[t._v("Array")]),t._v("。如果你的模块在浏览器运行，还能够使用"),a("code",[t._v("document")]),t._v("和"),a("code",[t._v("XMLHttpRequest")]),t._v("。")]),t._v(" "),a("p",[t._v("在另一个文件中，我们可以导入并使用"),a("code",[t._v("detectCats()")]),t._v("函数：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// demo.js - Kittydar demo program")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("detectCats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kittydar.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("go")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" canvas "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"catpix"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cats "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("detectCats")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("canvas"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("drawRectangles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("canvas"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("要从一个模块导入多个变量，你可以这样写：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("detectCats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Kittydar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kittydar.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("当你运行一个包含"),a("code",[t._v("import")]),t._v("声明的模块，会先导入要导入的模块并加载，然后根据深度优先的原则遍历依赖图谱来执行对应模块，并跳过已经执行的模块，来避免循环。")]),t._v(" "),a("p",[t._v("这就是模块基础知识，这真的很简单。😉")]),t._v(" "),a("h2",{attrs:{id:"导出列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#导出列表"}},[t._v("#")]),t._v(" 导出列表")]),t._v(" "),a("p",[t._v("你可以把你要导出的功能名写在一个列表里，然后用大括号括起来，这样就不用在每个要导出的功能前面加上export标记。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("detectCats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Kittydar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// no `export` keyword required here")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("detectCats")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("canvas"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Kittydar")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("导出列表并不需要写在文件的第一行，它可以出现在模块文件的顶级作用域的任何位置。你可以有多个导出列表，或者将导出列表与导出声明混合使用，只要不重复导出同一个变量名就行。")]),t._v(" "),a("h2",{attrs:{id:"重命名导出和导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重命名导出和导入"}},[t._v("#")]),t._v(" 重命名导出和导入")]),t._v(" "),a("p",[t._v("有时，导入的变量名碰巧与你需要使用的一些变量名冲突了，ES6允许你重命名导入的变量。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// suburbia.js")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Both these modules export something named `flip`.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// To import them both, we must rename at least one.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("flip "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" flipOmelet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eggs.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("flip "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" flipHouse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"real-estate.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),a("p",[t._v("同样，你在导出变量的时候也可以重命名它们。这在你想使用不同名字导出相同功能的时候十分方便。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unlicensed_nuclear_accelerator.js - media streaming without drm")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (not a real library, but maybe it should be)")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("v1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("v2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  v1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" streamV1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  v2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" streamV2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  v2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" streamLatestVersion\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"默认的导出"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#默认的导出"}},[t._v("#")]),t._v(" 默认的导出")]),t._v(" "),a("p",[t._v("新的标准在设计上是兼容已经存在的CommonJS和AMD模块的。如果你有一个Node项目，并且你已经执行了"),a("code",[t._v("npm install lodash")]),t._v("。你使用ES6代码能够单独引入Lodash中的函数：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("each"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lodash"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("each")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("如果你已经习惯使用"),a("code",[t._v("_.each")]),t._v("而不是"),a("code",[t._v("each")]),t._v("，你依然想像以前一样使用它。或者， 你想把"),a("code",[t._v("_")]),t._v("当成一个函数来使用，因为这才是Lodash。")]),t._v(" "),a("p",[t._v("这种情况下，你只要稍微改变下你的写法：不使用花括号来导入模块。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" _ "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lodash"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这个写法等同于"),a("code",[t._v('import {default as _} from "lodash";')]),t._v("。所有的CommonJS 和AMD模块在ES6中都能被当作"),a("code",[t._v("default")]),t._v("导出，这个导出和你在CommonJS中使用"),a("code",[t._v("require()")]),t._v("导出得到东西一样，即"),a("code",[t._v("exports")]),t._v("对象。")]),t._v(" "),a("p",[t._v("ES6模块在设计上可以让你导出更多的东西，但对于现在的CommonJS模块，导出的default模块就是能导出的全部东西了。例如，在写这篇文章时，据我所知，著名的"),a("a",{attrs:{href:"https://github.com/Marak/colors.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("colors模块"),a("OutboundLink")],1),t._v("没有特意去支持ES6语法，这是一个CommonJS模块组成的包，就像npm上的那些包一样，但是你可以直接引入到你的ES6代码中。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ES6 equivalent of `var colors = require("colors/safe");`')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" colors "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"colors/safe"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("如果你希望自己ES6模块也具有默认导出，这很简单。默认的导出方式并没有什么魔力；他就像其他导出一样，除了它的导出名为"),a("code",[t._v("default")]),t._v("。你可以使用我们之前提到的重命名语法：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("field1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" value1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("field2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" value2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("myObject "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("或者使用简写：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("field1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" value1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("field2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" value2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("code",[t._v("export default")]),t._v("关键词后面可以跟任何值：一个函数、一个类、一个对象，所有能被命名的变量。")]),t._v(" "),a("h2",{attrs:{id:"模块对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模块对象"}},[t._v("#")]),t._v(" 模块对象")]),t._v(" "),a("p",[t._v("不好意思，这篇文章有点长。JavaScript并不孤独：因为一些原因，所有的语言中都有模块系统，并且倾向于设计大量杂乱而又无聊的小特性。幸运的是我们只剩下一个话题，噢，不对，是两个。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" cows "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cows"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("当你使用"),a("code",[t._v("import *")]),t._v("的时候，被引入的是一个模块命名空间对象（module namespace object），它的属性是模块的输出。如果“cows”模块导出一个名为moo()的函数，那么在导入“cows”之后，你可以使用"),a("code",[t._v("cows.moo()")]),t._v("来进行调用。")]),t._v(" "),a("h2",{attrs:{id:"聚合模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合模块"}},[t._v("#")]),t._v(" 聚合模块")]),t._v(" "),a("p",[t._v("有时候一个包的主模块只不过是导入包其他所有的模块，并用统一的方式导出。为了简化这种代码，有一种将导入导出全部合一的简写：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// world-foods.js - good stuff from all over")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// import "sri-lanka" and re-export some of its exports')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Tea"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Cinnamon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sri-lanka"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// import "equatorial-guinea" and re-export some of its exports')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Coffee"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Cocoa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"equatorial-guinea"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// import "singapore" and export ALL of its exports')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"singapore"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这种"),a("code",[t._v("export-from")]),t._v("表达式类似于"),a("code",[t._v("import-from")]),t._v("后面跟了一个"),a("code",[t._v("export")]),t._v("。这和真正的导入有一些区别，它不会在当前作用域中绑定将要导出的变量。如果你打算在"),a("code",[t._v("world-foods.js")]),t._v("中使用"),a("code",[t._v("Tea")]),t._v("来编写一些代码，请不要使用这种简写，你会发现Tea为定义。")]),t._v(" "),a("p",[t._v("如果“singapore”导出的命名与其他导出发生了冲突，那就会出现错误，所以请谨慎使用。")]),t._v(" "),a("p",[t._v("呼，我们已经把语法介绍完了！下面来谈谈一些有趣的事情。")]),t._v(" "),a("h2",{attrs:{id:"import到底做了什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import到底做了什么"}},[t._v("#")]),t._v(" import到底做了什么？")]),t._v(" "),a("p",[t._v("不管你信不信，它什么都没做。")]),t._v(" "),a("p",[t._v("噢，你看起来没那么好骗。那么你会相信标准几乎没有说"),a("code",[t._v("import")]),t._v("到底该怎么做吗？这是件好事吗？（作者貌似很爱开玩笑。）")]),t._v(" "),a("p",[t._v("ES6将模块的加载细节"),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-hostresolveimportedmodule",target:"_blank",rel:"noopener noreferrer"}},[t._v("完全交给了实现"),a("OutboundLink")],1),t._v("，其余的模块执行部分却"),a("a",{attrs:{href:"http://www.ecma-international.org/ecma-262/6.0/index.html#sec-toplevelmoduleevaluationjob",target:"_blank",rel:"noopener noreferrer"}},[t._v("规定得非常详细"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("p",[t._v("简单来说，当你告诉JS引擎运行一个模块的时候，它的行为可以归纳为以下四部：")]),t._v(" "),a("ol",[a("li",[t._v("解析：读取模块的源代码，并检查语法错误。")]),t._v(" "),a("li",[t._v("加载：加载所有的导入模块（递归进行），这是还未标准化的部分。")]),t._v(" "),a("li",[t._v("链接：对于每个新加载的模块，在实现上都会创建一个作用域，并把模块中声明的所有变量都绑定在这个作用域上，包括从其他模块导入的变量。\n如果你想试试"),a("code",[t._v('import {cake} from "paleo"')]),t._v("，但是“paleo”模块没真正导出名为cake的变量，你会得到一个错误。这很糟糕，因为你离运行js并品尝蛋糕只有一步之遥。")]),t._v(" "),a("li",[t._v("运行时间：最后，开始执行加载进来的新的模块中的代码。这时，整个"),a("code",[t._v("import")]),t._v("过程已经完成了，所以前面说代码执行到"),a("code",[t._v("import")]),t._v("这一行声明时，什么都没有发生。")])]),t._v(" "),a("p",[t._v("看到没？我说了什么都不会发生，在编程语言这件事上，我从来都不说慌。")]),t._v(" "),a("p",[t._v("现在我们可以开始介绍这个系统中有趣的部分了。这有一个非常炫酷的技巧。由于系统没有指定如何加载的这方面的细节，并且你可以通过查看源代码中导入的声明，提前计算出所有的依赖项，所以ES6的实现可以通过预处理器完成所有的工作，然后把所有的模块打包到一个文件中，最后通过网络进行请求一次即可。像webpack这样的工具就是这么做的。")]),t._v(" "),a("p",[t._v("这是一个优雅的解决方案，因为通过网络加载所有的脚本文件很耗时，假如你请求一个资源后，发现里面有"),a("code",[t._v("import")]),t._v("声明，然后你又得请求更多资源。一个加载器需要非常多的网络请求来回传输。通过webpack，你不仅能在今天就使用ES6的模块话，你还能获得很多好处，并且不需要担心会造成运行时的性能下降。")]),t._v(" "),a("p",[t._v("原本是有计划制定一个ES6中模块加载的详细规范的，并且已经初步成型。它没有成为标准的原因之一是不知道如何与打包这一特性进行整合。我希望模块化的加载会更加标准化，也希望打包工具会越来越好。")]),t._v(" "),a("h2",{attrs:{id:"静态-vs-动态-或者说-规则如何打破规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态-vs-动态-或者说-规则如何打破规则"}},[t._v("#")]),t._v(" 静态 VS 动态，或者说：规则如何打破规则")]),t._v(" "),a("p",[t._v("作为一个动态编译语言，令人惊奇的是JavaScript拥有一个静态的模块系统。")]),t._v(" "),a("ul",[a("li",[t._v("所有的"),a("code",[t._v("import")]),t._v("和"),a("code",[t._v("export")]),t._v("只能写在顶级作用域中。你不能在条件判断语句和函数作用域内使用"),a("code",[t._v("import")]),t._v("。")]),t._v(" "),a("li",[t._v("所有导出的变量名必须是显式的，你不能通过遍历一个数组，动态生成一组导出名进行导出。")]),t._v(" "),a("li",[t._v("模块对象都是被冻结的，不能通过polyfill为它添加新的特性。")]),t._v(" "),a("li",[t._v("在所有模块运行之前， 其依赖的模块都必须经过加载、解析、链接的过程，目前没有"),a("code",[t._v("import")]),t._v("懒加载相关的语法。（现在import()方法已经在提案中了）")]),t._v(" "),a("li",[t._v("对于"),a("code",[t._v("import")]),t._v("的错误，无法进行recovery。一个应用可能依赖许多的模块，一旦有一个模块加载失败，这个应用都不会运行。你不能在"),a("code",[t._v("try/catch")]),t._v("中使用"),a("code",[t._v("import")]),t._v("。正是因为es6的模块表现得如此静态，webpack才能在编译的时候检测出代码中的错误。")]),t._v(" "),a("li",[t._v("你没法为一个模块在加载所有依赖项之前添加钩子，这意味着一个模块没有办法控制其依赖项的加载方式。")])]),t._v(" "),a("p",[t._v("如果你的需求是静态的，ES6的模块系统还是相当不错的。但是你有时候你还是向进行一些hack，对吧？")]),t._v(" "),a("p",[t._v("这就是为什么你使用的模块加载系统会提供一些系统层次的API来配合ES6的静态的"),a("code",[t._v("import/export")]),t._v("语法。例如，webpack有一个API能进行代码的分割，按照你的需求对一些模块进行懒加载。这个API能够打破之前列出的规矩。")]),t._v(" "),a("p",[t._v("ES6的模块语法非常静态，这很好-在使用一些编译工具时我们都能尝到一些甜头。\n静态语法的设计可以让它与动态加载器丰富的API进行工作。")]),t._v(" "),a("h2",{attrs:{id:"我什么时候才能使用es6模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#我什么时候才能使用es6模块"}},[t._v("#")]),t._v(" 我什么时候才能使用ES6模块？")]),t._v(" "),a("p",[t._v("如果你今天就想使用，你需要一个预编译器，如 "),a("a",{attrs:{href:"https://github.com/google/traceur-compiler#what-is-traceur",target:"_blank",rel:"noopener noreferrer"}},[t._v("Traceur"),a("OutboundLink")],1),t._v(" 和 "),a("a",{attrs:{href:"http://babeljs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel"),a("OutboundLink")],1),t._v(" 。这个系列之前也有相关文章，"),a("a",{attrs:{href:"https://hacks.mozilla.org/2015/06/es6-in-depth-babel-and-broccoli/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Gastón I. Silva：如何使用 Babel 和 Broccoli"),a("OutboundLink")],1),t._v(" 编译 ES6 代码为 web 可用。Gastón也将案例"),a("a",{attrs:{href:"https://github.com/givanse/broccoli-babel-examples/tree/master/es6-modules",target:"_blank",rel:"noopener noreferrer"}},[t._v("放在了 GitHub 上"),a("OutboundLink")],1),t._v("。另外"),a("a",{attrs:{href:"http://2ality.com/2015/04/webpack-es6.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("这篇文章"),a("OutboundLink")],1),t._v("也介绍了如何使用 Babel 和 webpack。")]),t._v(" "),a("p",[t._v("ES6 模块系统由 Dave Herman 和 Sam Tobin-Hochstadt进行设计，他们不顾多人（包括我）的反对，多年来始终坚持模块系统是静态的。JonCoppeard正在Firefox上实现ES6的模块化功能。JavaScript Loader的相关标准的工作也正在进行中，预计在HTML中将会被添加类似"),a("code",[t._v("<script type=module>")]),t._v(" 这样的东西。")]),t._v(" "),a("p",[t._v("这便是 ES6 了。")]),t._v(" "),a("p",[t._v("这太有趣了，我不希望现在就结束。也许我们还能再说一会。我们还能够讨论一些关于ES6规范中零零碎碎的东西，但这些又不足够写成文章。也行会有一些关于ES6未来特性的一些东西，尽请期待下周的"),a("code",[t._v("ES6 In Depth")]),t._v("。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("原文链接："),a("a",{attrs:{href:"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES6 In Depth: Modules"),a("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);